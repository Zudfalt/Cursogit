git init
Se utiliza cuando se comienza el proyecto, conseguimos que git cree dos areas
una de las areas es stagin area o area de ensayo, que viene siendo un area temporal.
luego tenemos el segundo area que es donde se almacena la copia, que estamos siguiendo.

git add (y el nombre de los documentos que quieras incluir)
Es necesaria para hacer el seguimiento de un archivo, de uno, no necesariamente de todos.
Llevando el archivo internamente desde el directorio de trabajo, hasta el area de ensayo.

git commit (-m "Para agregar algun comentario del estado guardado"
Este tercer comando, traslada el archivo o archivos del area de ensayo, hasta el repositorio, creando una copia o un respaldo

git status -s
te permite ir observando que archivos estan siendo guardados en el git a tiempo real

Para subir los archivos al github ha sido complicado, se ha utilizado el comando 
git remote add (Nombre que desees) (seguido del link o url del repositorio de github)
#ejemplo: git remote add curso https://github.com/Zudfalt/Cursogit.git

luego se ha cargado todo del git al github a traves de la consola, pero antes de ello
se ha entrado a la configuracion del github y se ha generado un token, donde autorizamos
la lectura y escritura del repositorio en la casilla "REPO", generamos el token y continuamos.

git push curso master
#Nos sale para añadir el nombre de usuario de github y luego en vez de una contraseña
#colocamos el token, ya que desde 2021, github no permite usar la contraseña

git pull curso master
#Nos permite cargar lo que modifiquemos directamente desde el GitHub, vendria siendo el
#caso opuesto a el git push.

Por cierto, cada vez que sea necesario cargar informacion al github, el sistema te pedira
autentificacion, por lo que es necesario guardar siempre el token ya que solo te lo muestra
una vez.

Para guardar las versiones del sistema, es muy necesario usar los TAG, de la siguiente manera:
git tag (fecha del proyecto) - (Nombre de la version)
git tag 11-10-24v1 -m "Version 1 del proyecto"

Y para finalizar y verificar si se guardo correctamente la version junto a las modificaciones y commits, utilizamos lo siguiente:

git log --oneline
